import zipfile
import base64
import os
import sys
import shutil
import webbrowser as web


fpath = ""

try:
    fpath = sys.argv[1]
except:
    fpath = input("FILE: ")

fname = os.path.basename(fpath).split('.')[0]
workfolder = sys.argv[0].replace(os.path.basename(sys.argv[0]),"")
dpath = "C:\\Software\\tmp\\"

try:
    shutil.rmtree(dpath)
    print("[+] DelDir Successfully")
except:
    print("[-] DelDir Failed")


#Unzip
with zipfile.ZipFile(fpath) as zf:
   zf.extractall(path=dpath)



INDEX_HTML = b'PCFET0NUWVBFIGh0bWw+PGh0bWw+PGhlYWQ+PG1ldGEgY2hhcnNldD0ndXRmLTgnIC8+PG1ldGEgbmFtZT0ndmlld3BvcnQnIGNvbnRlbnQ9J3dpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vJyAvPgo8dGl0bGU+VmlldyBFbmJ4PC90aXRsZT4KPHN0eWxlPgoucmljaHRleHQgeyBwb3NpdGlvbjpyZWxhdGl2ZTsgZm9udC1zaXplOiAzMHB4OyBjb2xvcjogIzAwMDsgdGV4dC1zaGFkb3c6IDJweCAzcHggMXB4ICNGRkY7IHotaW5kZXg6IDU7IH0KLmdyb3VweyBwb3NpdGlvbjogcmVsYXRpdmU7IH0gLmJvZHl7IG1hcmdpbjogMHB4OyB9IGltZ3sgei1pbmRleDogMTsgfSBoM3sgbWFyZ2luOiAxMHB4OyB9CiNlbm93LXNob3d7IHRyYW5zZm9ybTpzY2FsZSgwLjc1LDAuNzUpO3RyYW5zZm9ybS1vcmlnaW46IDAlIDAlOyB9CmF7IHRleHQtZGVjb3JhdGlvbjpub25lOyBiYWNrZ3JvdW5kOiM2NWFkNTc7Y29sb3I6I0ZGRjtwYWRkaW5nOjVweDtib3JkZXItcmFkaXVzOjEwcHg7IH0KPC9zdHlsZT48L2hlYWQ+PGJvZHk+CjxjZW50ZXI+CjxoMz57e2NOYW1lfX08L2gzPgo8Y2VudGVyIHN0eWxlPSJib3JkZXItcmFkaXVzOjEwcHg7d2lkdGg6OTYwcHg7aGVpZ2h0OjU0MHB4O292ZXJmbG93OmhpZGRlbjtib3JkZXI6MnB4IHNvbGlkICM2NWFkNTc7Ij4KPGRpdiBpZD0iZW5vdy1zaG93IiBhbGlnbj1sZWZ0PjwvZGl2Pgo8L2NlbnRlcj4KCjx0YWJsZSB3aWR0aD0iOTcwcHgiIHN0eWxlPSJtYXJnaW4tdG9wOjVweDsiPjx0cj4KPHRkIGFsaWduPSJsZWZ0Ij48YSBpZD0ibGVmdC1oYW5kIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij4mbHQ7IEJBQ0s8L2E+PC90ZD4KPHRkIGFsaWduPSJyaWdodCI+PGEgaWQ9InJpZ2h0LWhhbmQiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPk5FWFQgJmd0OzwvYT48L2E+PC90ZD4KPC90cj48L3RhYmxlPgo8L2NlbnRlcj4KPHNjcmlwdCBzcmM9Ii4vb3BlbkVub3cuanMiPjwvc2NyaXB0Pgo8c2NyaXB0Pgp2YXIgZW4gPSBuZXcgRU5PVygpOwplbi5DT05GSUcoeyJzbGlkZXMiOiIuL1NsaWRlcy8iLCJyZXNvdXJjZXMiOiIuL1Jlc291cmNlcy8iLCJuYW1lIjoie3tjTmFtZX19IiwiY29udGFpbmVyIjoiZW5vdy1zaG93In0pOwp2YXIgcGcgPSAwOyBlbi5kaXNwbGF5KHBnKTsKdmFyIGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibGVmdC1oYW5kIik7CnZhciByID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJpZ2h0LWhhbmQiKTsKbC5vbmNsaWNrPWZ1bmN0aW9uKCl7aWYocGcgPiAwKXtwZyAtPSAxO2VuLmRpc3BsYXkocGcpO31lbHNle3JldHVybjt9fQpyLm9uY2xpY2s9ZnVuY3Rpb24oKXtwZyArPSAxO2VuLmRpc3BsYXkocGcpO30KPC9zY3JpcHQ+PC9ib2R5PjwvaHRtbD4='
OPENENOW_JS = b''

INDEX_HTML = str(base64.b64decode(INDEX_HTML), "utf-8")
OPENENOW_JS = str(base64.b64decode(OPENENOW_JS), "utf-8")

INDEX_HTML = INDEX_HTML.replace("{{cName}}", fname)

with open(dpath + "index.html",'a') as f:
    f.write(INDEX_HTML)
    
with open(dpath + "openEnow.js",'a') as f:
    f.write(OPENENOW_JS)

web.open("http://localhost:8080/",0,False)
print("[*] Starting Local Server (http://localhost:8080/)")
os.system(workfolder + "uweb.exe -p 8080 -d " + dpath + " -cb -ct -q")
